name: CI/CD

on:
  push:
    branches: [ main ]

# so only one deploy runs at a time
concurrency:
  group: deploy-prod
  cancel-in-progress: false

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.tag.outputs.short_sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: tag
        run: echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Build & push WEB (Next.js)
        uses: docker/build-push-action@v6
        with:
          context: ./web-app
          file: ./web-app/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:${{ steps.tag.outputs.short_sha }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & push API (FastAPI)
        uses: docker/build-push-action@v6
        with:
          context: ./rest-api
          file: ./rest-api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-api:${{ steps.tag.outputs.short_sha }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-ec2:
    # gate deploys so forks/other branches don't deploy
    if: github.repository_owner == 'farhan-navas' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production
    steps:
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            SHORT_SHA="${{ needs.build-and-push.outputs.short_sha }}"

            # Login to GHCR on the server (skip if packages are public)
            docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" -p "${{ secrets.GHCR_READ_TOKEN }}" || true

            # Ensure deploy dir exists
            mkdir -p /srv/app
            cd /srv/app

            # Ensure .env has tags and update them to this build's SHA
            touch .env
            grep -q '^WEB_TAG=' .env || echo "WEB_TAG=latest" >> .env
            grep -q '^API_TAG=' .env || echo "API_TAG=latest" >> .env
            sed -i.bak "s/^WEB_TAG=.*/WEB_TAG=${SHORT_SHA}/" .env
            sed -i.bak "s/^API_TAG=.*/API_TAG=${SHORT_SHA}/" .env

            # Pull and restart
            docker compose pull
            docker compose up -d

            # Optional cleanup
            docker image prune -f